import{_ as t,o as d,c as e,f as a}from"./app-6c152e92.js";const n={},s=a(`<h2 id="_2-5-1-概述" tabindex="-1"><a class="header-anchor" href="#_2-5-1-概述" aria-hidden="true">#</a> 2.5.1 概述</h2><p>字典的类型名是<code>dict</code>。在概念上，一个字典 (一个<code>dict</code>对象)是一个有穷映射，其定义域是任意的关键码(简称键)集合，值域是任对象集合。</p><p>需要注意的是，用于字典的键必须是<strong>不变对象</strong>，而且能用<code>==</code>运算符比较相等。</p><p>Python 并不要求一个字典里的键和值的类型统一，可以既有字符串键又有整数键。但常见的情况是一个字典里所有的键同属一个类型，所有的值同属一个类型。</p><p>也可以用描述式生成字典，基础是前面介绍的序列描述式，但用花括号括起来，生成表达式部分写成 “键:值” 对的形式。下面是两个实例:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">{</span>n<span class="token punctuation">:</span>n<span class="token operator">**</span><span class="token number">3</span> <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
<span class="token comment">#得到{0:0，1:1，2:8，3:27}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-5-2-常见函数" tabindex="-1"><a class="header-anchor" href="#_2-5-2-常见函数" aria-hidden="true">#</a> 2.5.2 常见函数</h2><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>k in dic</td><td>检查 dic，存在键 k 时返回 True，否则返回 False</td></tr><tr><td>len(dic)</td><td>得到 dic 的元素（键——值对）个数</td></tr><tr><td>del dic[k]</td><td>删除键为 k 的关联，不存在 k 时报错</td></tr><tr><td>iter(dic)</td><td>得到对 dic 中所有<strong>键</strong>的迭代器，顺序由解释器确定</td></tr><tr><td>dic.get(k[,default])</td><td>得到 dic 中与 k 关联的值。不存在 k 时返回 None 或参数 default 的值(如果提供)</td></tr><tr><td>dic.copy()</td><td>得到 dic 的拷贝</td></tr><tr><td>dic.clear()</td><td>删除 dic 里的所有元素，将其变为空字典</td></tr><tr><td>dic.pop(k [,v])</td><td>从 dic 里删除键 k 并返回其关联值，没有 k 时则报错。带参数 v 的形式在 dic 里没有键 k 时返回 v</td></tr><tr><td>dic.popitem()</td><td>以二元组(k,v)形式返回 dic 里的某个元素(某个键一值对，由解释器确定)，并将该元素从 dic 删除</td></tr><tr><td>dic.update([other])</td><td>用另一字典 other 更新 dic，也可以用一批关键字参数做这个操作。相当于一组元素赋值:如果 dic 没有键 k 则加入 k 及其关联，有 k 时修改 k 的关联值</td></tr><tr><td>dic.setdefault(k[,default])</td><td>dic 有 k 时返回其关联值，否则加入 k 与 default 的关联并返回default，无 default 时用 None</td></tr><tr><td>dic,keys()</td><td>得到 dic 的所有键的迭代器，顺序由解释器内部确定</td></tr><tr><td>dic.values()</td><td>得到 dic的所有值的迭代器，顺序由解释器内部确定</td></tr><tr><td>dic.items()</td><td>得到 dic 所有“键一值”关联的迭代器，顺序由解释器内部确定。</td></tr></tbody></table>`,8),c=[s];function r(i,o){return d(),e("div",null,c)}const l=t(n,[["render",r],["__file","05.html.vue"]]);export{l as default};
