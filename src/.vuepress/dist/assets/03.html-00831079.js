const t=JSON.parse('{"key":"v-23ae6650","path":"/blog/notion/python/python_book/Chapter%2003/03.html","title":"3.3  生成器函数和闭包","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"3.3  生成器函数和闭包","shortTitle":"3.3  生成器函数和闭包","date":"2023-12-04T00:00:00.000Z","description":"讨论 python 程序的两种采用函数定义形式构造的编程结构。","index":true,"icon":"python","category":["python","语法基础"],"tag":["阅读记录"],"timeline":true,"isOriginal":true,"star":false,"article":true,"head":[["meta",{"property":"og:url","content":"https:// https://life-if-forever.gitee.io/voyager/voyager/blog/notion/python/python_book/Chapter%2003/03.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"3.3  生成器函数和闭包"}],["meta",{"property":"og:description","content":"讨论 python 程序的两种采用函数定义形式构造的编程结构。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Voyager"}],["meta",{"property":"article:tag","content":"阅读记录"}],["meta",{"property":"article:published_time","content":"2023-12-04T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3.3  生成器函数和闭包\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-04T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Voyager\\",\\"url\\":\\"https://life-if-forever.gitee.io/voyager\\"}]}"]]},"headers":[{"level":2,"title":"3.3.1 生成器函数","slug":"_3-3-1-生成器函数","link":"#_3-3-1-生成器函数","children":[{"level":3,"title":"a. 定义生成器函数","slug":"a-定义生成器函数","link":"#a-定义生成器函数","children":[]},{"level":3,"title":"b. 生成器函数的语义基础","slug":"b-生成器函数的语义基础","link":"#b-生成器函数的语义基础","children":[]},{"level":3,"title":"c. 无穷生成器","slug":"c-无穷生成器","link":"#c-无穷生成器","children":[]}]},{"level":2,"title":"3.3.2 闭包","slug":"_3-3-2-闭包","link":"#_3-3-2-闭包","children":[{"level":3,"title":"a. 使用注意点","slug":"a-使用注意点","link":"#a-使用注意点","children":[]},{"level":3,"title":"b. 底层理解","slug":"b-底层理解","link":"#b-底层理解","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.69,"words":1406},"filePathRelative":"blog/notion/python/python_book/Chapter 03/03.md","localizedDate":"2023年12月4日","excerpt":"<p>本节讨论的是<strong>生成器函数</strong>得到的<strong>生成器对象</strong>，以及一个称为<strong>闭包</strong>的编程技术。</p>\\n<h2> 3.3.1 生成器函数</h2>\\n<p>迭代器是一种非常有用的计算结构，也是 Python 语言里的一个核心概念，指一类具有某些特定功能的对象。<code>for </code>循环语句依赖于迭代器的概念，一些标准的语言机制可以用于产生选代器，如<code>range</code>函数生成迭代器对象。迭代器部分信息可详见：<a href=\\"/voyager/blog/notion/python/python_book/Chapter%2002/01.html\\" target=\\"blank\\"> 📖2.1.2 可迭代对象部分</a></p>"}');export{t as data};
