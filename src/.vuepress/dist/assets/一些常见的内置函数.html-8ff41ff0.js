const n=JSON.parse(`{"key":"v-30787434","path":"/blog/notion/python/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0.html","title":"","lang":"zh-CN","frontmatter":{"description":"一些常见的内置函数 函数 参数 sorted(iterable[,key,reverse]) iterable为原序列，key为排序参考位置，reverse若为true则降序，false则升序 map(function,iterable1[,iterable2......]) 调用参数序列的每一个元素进入函数，每次返回函数返回值 zip([iterable,...]) 将列表打包成元组,最好是两个以上，且返回值是一个对象（py3.x） eval() 计算表达式并返回值,必须是数字 exec() 运行程序返回结果 all() 参数都是True时返回True,否则False any() 参数有一个为True就返回True sorted() a=[5,4,1] b=sorted(a) print(a) #[5,4,1] print(b) #[1,4,5] student=[('xx,51,11'),('李四',81,12),('王五',100,10)] print(sorted(student,key=lambda s:s[2],reverse=True)) #按照年纪从大到小排列 #[('李四',81,12),('xx,51,11'),('王五',100,10)] map() print(list(map(lambda x:x**2,[1,2,3,4]))) #[1,4,9,16] print(list(map(lambda x,y:x+y,[12,13,14],[1,2,3]))) #[13,15,17] zip() a=[1,2,3,4] b=[1,2,3] print(list(zip(a,b))) # [(1, 1), (2, 2), (3, 3)] print(list(zip(b))) #[(1,), (2,), (3,)] print((zip(a,b)) #&lt;zip object at 0x2b41e9a00448&gt; eval()，exec() a=eval(input()) print(a) ''' &gt;&gt;111 111 &gt;&gt;asdf NameError: name 'asd' is not defined ''' exec(print('hello')) #hello 程序结构 调用文件名**（需在同一目录下）** triangle.py import math def area(a,b,c): s=(a+b+c)/2 return(math.sqrt(s*(s-a)*(s-b)*(s-c))) count.py import triangle a=12 b=34 c=22 print(triangle.area(a,b,c)) 使用方法有很多种，比如： import math #调用math中的所有函数 from math import * #同理 from math import sqrt #只调用math中的sqrt sys模块 查看sys模块的变量和函数 使用dir(sys)既可 import sys print(dir(sys)) 显示添加搜索路径 #显示路径 print(sys.path) #添加路径 sys.path.append('xxxxxxx') 命令行参数 利用命令行参数传参 sys.argv[0] #程序文件名 sys.argv[1] #数一 sys.argv[2] #数二 展示 函数 功能 sys.argv 从程序外部向程序传递参数 sys.exit([arg]) 程序中间的退出，arg=0正常退出 sys.getdefaultencoding() 获取系统当前编码 sys.setdefaultencoding() 设定系统当前编码 sys.path 模块搜索路径的字符串列表 sys.platform 获取当前系统平台","head":[["meta",{"property":"og:url","content":"https:// https://life-if-forever.gitee.io/voyager/voyager/blog/notion/python/%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:description","content":"一些常见的内置函数 函数 参数 sorted(iterable[,key,reverse]) iterable为原序列，key为排序参考位置，reverse若为true则降序，false则升序 map(function,iterable1[,iterable2......]) 调用参数序列的每一个元素进入函数，每次返回函数返回值 zip([iterable,...]) 将列表打包成元组,最好是两个以上，且返回值是一个对象（py3.x） eval() 计算表达式并返回值,必须是数字 exec() 运行程序返回结果 all() 参数都是True时返回True,否则False any() 参数有一个为True就返回True sorted() a=[5,4,1] b=sorted(a) print(a) #[5,4,1] print(b) #[1,4,5] student=[('xx,51,11'),('李四',81,12),('王五',100,10)] print(sorted(student,key=lambda s:s[2],reverse=True)) #按照年纪从大到小排列 #[('李四',81,12),('xx,51,11'),('王五',100,10)] map() print(list(map(lambda x:x**2,[1,2,3,4]))) #[1,4,9,16] print(list(map(lambda x,y:x+y,[12,13,14],[1,2,3]))) #[13,15,17] zip() a=[1,2,3,4] b=[1,2,3] print(list(zip(a,b))) # [(1, 1), (2, 2), (3, 3)] print(list(zip(b))) #[(1,), (2,), (3,)] print((zip(a,b)) #&lt;zip object at 0x2b41e9a00448&gt; eval()，exec() a=eval(input()) print(a) ''' &gt;&gt;111 111 &gt;&gt;asdf NameError: name 'asd' is not defined ''' exec(print('hello')) #hello 程序结构 调用文件名**（需在同一目录下）** triangle.py import math def area(a,b,c): s=(a+b+c)/2 return(math.sqrt(s*(s-a)*(s-b)*(s-c))) count.py import triangle a=12 b=34 c=22 print(triangle.area(a,b,c)) 使用方法有很多种，比如： import math #调用math中的所有函数 from math import * #同理 from math import sqrt #只调用math中的sqrt sys模块 查看sys模块的变量和函数 使用dir(sys)既可 import sys print(dir(sys)) 显示添加搜索路径 #显示路径 print(sys.path) #添加路径 sys.path.append('xxxxxxx') 命令行参数 利用命令行参数传参 sys.argv[0] #程序文件名 sys.argv[1] #数一 sys.argv[2] #数二 展示 函数 功能 sys.argv 从程序外部向程序传递参数 sys.exit([arg]) 程序中间的退出，arg=0正常退出 sys.getdefaultencoding() 获取系统当前编码 sys.setdefaultencoding() 设定系统当前编码 sys.path 模块搜索路径的字符串列表 sys.platform 获取当前系统平台"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Voyager"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Voyager\\",\\"url\\":\\"https://life-if-forever.gitee.io/voyager\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.86,"words":559},"filePathRelative":"blog/notion/python/一些常见的内置函数.md","excerpt":"<ul>\\n<li>\\n<h3> 一些常见的内置函数</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>函数</th>\\n<th style=\\"text-align:left\\">参数</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>sorted(iterable[,key,reverse])</td>\\n<td style=\\"text-align:left\\">iterable为原序列，key为排序参考位置，reverse若为true则降序，false则升序</td>\\n</tr>\\n<tr>\\n<td>map(function,iterable1[,iterable2......])</td>\\n<td style=\\"text-align:left\\">调用参数序列的每一个元素进入函数，每次返回函数返回值</td>\\n</tr>\\n<tr>\\n<td>zip([iterable,...])</td>\\n<td style=\\"text-align:left\\">将列表打包成元组,最好是两个以上，且返回值是一个对象（py3.x）</td>\\n</tr>\\n<tr>\\n<td>eval()</td>\\n<td style=\\"text-align:left\\">计算表达式并返回值,必须是数字</td>\\n</tr>\\n<tr>\\n<td>exec()</td>\\n<td style=\\"text-align:left\\">运行程序返回结果</td>\\n</tr>\\n<tr>\\n<td>all()</td>\\n<td style=\\"text-align:left\\">参数都是True时返回True,否则False</td>\\n</tr>\\n<tr>\\n<td>any()</td>\\n<td style=\\"text-align:left\\">参数有一个为True就返回True</td>\\n</tr>\\n</tbody>\\n</table>\\n<ul>\\n<li>\\n<p><strong>sorted()</strong></p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code>a<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span>\\nb<span class=\\"token operator\\">=</span><span class=\\"token builtin\\">sorted</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span> \\n<span class=\\"token comment\\">#[5,4,1]</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">#[1,4,5]</span>\\nstudent<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'xx,51,11'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'李四'</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">81</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">12</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'王五'</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">sorted</span><span class=\\"token punctuation\\">(</span>student<span class=\\"token punctuation\\">,</span>key<span class=\\"token operator\\">=</span><span class=\\"token keyword\\">lambda</span> s<span class=\\"token punctuation\\">:</span>s<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>reverse<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">#按照年纪从大到小排列</span>\\n<span class=\\"token comment\\">#[('李四',81,12),('xx,51,11'),('王五',100,10)]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>map()</strong></p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">list</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">lambda</span> x<span class=\\"token punctuation\\">:</span>x<span class=\\"token operator\\">**</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">#[1,4,9,16]</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">list</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">lambda</span> x<span class=\\"token punctuation\\">,</span>y<span class=\\"token punctuation\\">:</span>x<span class=\\"token operator\\">+</span>y<span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">12</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">13</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">14</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">#[13,15,17]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>zip()</strong></p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code>a<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">]</span>\\nb<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">list</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">zip</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span>b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\"># [(1, 1), (2, 2), (3, 3)]</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">list</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">zip</span><span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">#[(1,), (2,), (3,)]</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">zip</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span>b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">#&lt;zip object at 0x2b41e9a00448&gt;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>eval()，exec()</strong></p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code>a<span class=\\"token operator\\">=</span><span class=\\"token builtin\\">eval</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">input</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token triple-quoted-string string\\">'''\\n&gt;&gt;111\\n111\\n&gt;&gt;asdf\\nNameError: name 'asd' is not defined\\n'''</span>\\n\\n<span class=\\"token keyword\\">exec</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'hello'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">#hello</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>\\n</li>\\n<li>\\n<h3> 程序结构</h3>\\n<ul>\\n<li>\\n<p>调用文件名**（需在同一目录下）**</p>\\n<ul>\\n<li>\\n<p><a href=\\"http://triangle.py\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">triangle.py</a></p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> math\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">area</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span>b<span class=\\"token punctuation\\">,</span>c<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    s<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token operator\\">+</span>b<span class=\\"token operator\\">+</span>c<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">/</span><span class=\\"token number\\">2</span>\\n    <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">(</span>math<span class=\\"token punctuation\\">.</span>sqrt<span class=\\"token punctuation\\">(</span>s<span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">(</span>s<span class=\\"token operator\\">-</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">(</span>s<span class=\\"token operator\\">-</span>b<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">(</span>s<span class=\\"token operator\\">-</span>c<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><a href=\\"http://count.py\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">count.py</a></p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> triangle\\na<span class=\\"token operator\\">=</span><span class=\\"token number\\">12</span>\\nb<span class=\\"token operator\\">=</span><span class=\\"token number\\">34</span>\\nc<span class=\\"token operator\\">=</span><span class=\\"token number\\">22</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>triangle<span class=\\"token punctuation\\">.</span>area<span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span>b<span class=\\"token punctuation\\">,</span>c<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>使用方法有很多种，比如：</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> math  <span class=\\"token comment\\">#调用math中的所有函数</span>\\n<span class=\\"token keyword\\">from</span> math <span class=\\"token keyword\\">import</span> <span class=\\"token operator\\">*</span>   <span class=\\"token comment\\">#同理</span>\\n<span class=\\"token keyword\\">from</span> math <span class=\\"token keyword\\">import</span> sqrt  <span class=\\"token comment\\">#只调用math中的sqrt</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>\\n</li>\\n<li>\\n<p>sys模块</p>\\n<ul>\\n<li>\\n<p>查看sys模块的变量和函数</p>\\n<p><strong>使用dir(sys)既可</strong></p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> sys\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">dir</span><span class=\\"token punctuation\\">(</span>sys<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>显示添加搜索路径</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token comment\\">#显示路径</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>sys<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">#添加路径</span>\\nsys<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">.</span>append<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'xxxxxxx'</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>命令行参数</p>\\n<p>利用命令行参数传参</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code>sys<span class=\\"token punctuation\\">.</span>argv<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span> <span class=\\"token comment\\">#程序文件名</span>\\nsys<span class=\\"token punctuation\\">.</span>argv<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token comment\\">#数一</span>\\nsys<span class=\\"token punctuation\\">.</span>argv<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span> <span class=\\"token comment\\">#数二</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>展示</p>\\n<table>\\n<thead>\\n<tr>\\n<th>函数</th>\\n<th>功能</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>sys.argv</td>\\n<td>从程序外部向程序传递参数</td>\\n</tr>\\n<tr>\\n<td>sys.exit([arg])</td>\\n<td>程序中间的退出，arg=0正常退出</td>\\n</tr>\\n<tr>\\n<td>sys.getdefaultencoding()</td>\\n<td>获取系统当前编码</td>\\n</tr>\\n<tr>\\n<td>sys.setdefaultencoding()</td>\\n<td>设定系统当前编码</td>\\n</tr>\\n<tr>\\n<td>sys.path</td>\\n<td>模块搜索路径的字符串列表</td>\\n</tr>\\n<tr>\\n<td>sys.platform</td>\\n<td>获取当前系统平台</td>\\n</tr>\\n</tbody>\\n</table>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{n as data};
