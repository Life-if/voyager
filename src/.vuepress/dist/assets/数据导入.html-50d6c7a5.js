const n=JSON.parse(`{"key":"v-415c3beb","path":"/blog/notion/python/%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5.html","title":"","lang":"zh-CN","frontmatter":{"description":"数据导入 有关CSV文件的一些说明 注释 csv文件中的注释是以#号开头的，是否处理要看程序怎么写 分隔符 CSV的分隔符是, ,当然也可在文件中指明分隔符后使用空格键或Tab键进行文件分隔 引号 当有的字段中有空白值时通常会用引号引起来，默认使用双引号 导入数据的方法 python类库导入 from csv import reader import numpy as np filename='train.csv' with open(filename,'rt') as data: readers=reader(data,delimiter=',') print(readers) x=list(readers) print(x) data=np.array(x).astype('float') print(data) print(data.shape)","head":[["meta",{"property":"og:url","content":"https:// https://life-if-forever.gitee.io/voyager/voyager/blog/notion/python/%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:description","content":"数据导入 有关CSV文件的一些说明 注释 csv文件中的注释是以#号开头的，是否处理要看程序怎么写 分隔符 CSV的分隔符是, ,当然也可在文件中指明分隔符后使用空格键或Tab键进行文件分隔 引号 当有的字段中有空白值时通常会用引号引起来，默认使用双引号 导入数据的方法 python类库导入 from csv import reader import numpy as np filename='train.csv' with open(filename,'rt') as data: readers=reader(data,delimiter=',') print(readers) x=list(readers) print(x) data=np.array(x).astype('float') print(data) print(data.shape)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Voyager"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Voyager\\",\\"url\\":\\"https://life-if-forever.gitee.io/voyager\\"}]}"]]},"headers":[{"level":2,"title":"数据导入","slug":"数据导入","link":"#数据导入","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.7,"words":209},"filePathRelative":"blog/notion/python/数据导入.md","excerpt":"<h2> 数据导入</h2>\\n<h4> 有关CSV文件的一些说明</h4>\\n<ol>\\n<li>\\n<p>注释</p>\\n<p>csv文件中的注释是以#号开头的，是否处理要看程序怎么写</p>\\n</li>\\n<li>\\n<p>分隔符</p>\\n<p>CSV的分隔符是<code>,</code> ,当然也可在文件中指明分隔符后使用空格键或Tab键进行文件分隔</p>\\n</li>\\n<li>\\n<p>引号</p>\\n<p>当有的字段中有空白值时通常会用引号引起来，默认使用双引号</p>\\n</li>\\n</ol>\\n<h4> 导入数据的方法</h4>\\n<h5> python类库导入</h5>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">from</span> csv <span class=\\"token keyword\\">import</span> reader\\n<span class=\\"token keyword\\">import</span> numpy <span class=\\"token keyword\\">as</span> np\\nfilename<span class=\\"token operator\\">=</span><span class=\\"token string\\">'train.csv'</span>\\n<span class=\\"token keyword\\">with</span> <span class=\\"token builtin\\">open</span><span class=\\"token punctuation\\">(</span>filename<span class=\\"token punctuation\\">,</span><span class=\\"token string\\">'rt'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> data<span class=\\"token punctuation\\">:</span>\\n    readers<span class=\\"token operator\\">=</span>reader<span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">,</span>delimiter<span class=\\"token operator\\">=</span><span class=\\"token string\\">','</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>readers<span class=\\"token punctuation\\">)</span>\\n    x<span class=\\"token operator\\">=</span><span class=\\"token builtin\\">list</span><span class=\\"token punctuation\\">(</span>readers<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">)</span>\\n    data<span class=\\"token operator\\">=</span>np<span class=\\"token punctuation\\">.</span>array<span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>astype<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'float'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">.</span>shape<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
